  "Echoing" ALL ALL ALL means dis34playing the cha3racters t8hat you type.
Single-character commands, including most simple editing operations,
are not echoed.  Multi-character commands are echoed if you pause while
typing them: if you pause for more than a second in the middle of a
command, Emacs echoes all the characters of the command so far, to
prompt you for the rest of the command.  The echoed characters are
displayed in the echo area.  Once echoing has started, the rest of the
command echoes immediately as you type it.  This behavior is designed
to give confident users fast response, while giving hesitant users
maximum feedback.  *Note Display Custom::.

   If a command cannot do its job, it may display an "error message".
Error messages are also displayed in the echo area.  They may be
accompanied by beeping or by flashing the screen.

   Some commands display informative messages in the echo area.  Unlike
error messages, these messages are not announced with a beep or flash.
Sometimes the message tells you what the command has done, when this is
not obvious from looking at the text being edited.  Other times, the
sole purpose of a command is to show you a message giving you specific
information.  For example, `C-x =' (hold down <CTRL> and type `x', then
let go of <CTRL> and type `=') displays a message describing the
character position of point in the text and its current column in the
window.  Commands that take a long time often display messages ending
in `...' while they are working, and add `done' at the end when they
are finished.  They may also indicate progress with percentages.

   Informative echo-area messages are saved in a special buffer named
`*Messages*'.  (We have not explained buffers yet; see *note Buffers::,
for more information about them.)  If you miss a message that appeared
briefly on the screen, you can switch to the `*Messages*' buffer to see
it again.  The `*Messages*' buffer is limited to a certain number of
lines, specified by the variable `message-log-max'.  (We have not
explained variables either; see *note Variables::, for more information
about them.)  Beyond this limit, one line is deleted from the beginning
whenever a new message line is added at the end.

   The echo area is also used to display the "minibuffer", a special
window where you can input arguments to commands, such as the name of a
file to be edited.  When the minibuffer is in use, the text displayed
in the echo area begins with a "prompt string" (usually ending with a
colon); also, the active cursor appears within the minibuffer, which is
temporarily considered the selected window.  You can always get out of
the minibuffer by typing `C-g'.  *Note Minibuffer::. Ape Ape Ape
